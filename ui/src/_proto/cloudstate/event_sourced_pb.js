// source: cloudstate/event_sourced.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var cloudstate_entity_pb = require('../cloudstate/entity_pb.js');
goog.object.extend(proto, cloudstate_entity_pb);
goog.exportSymbol('proto.cloudstate.eventsourced.EventSourcedEvent', null, global);
goog.exportSymbol('proto.cloudstate.eventsourced.EventSourcedInit', null, global);
goog.exportSymbol('proto.cloudstate.eventsourced.EventSourcedReply', null, global);
goog.exportSymbol('proto.cloudstate.eventsourced.EventSourcedSnapshot', null, global);
goog.exportSymbol('proto.cloudstate.eventsourced.EventSourcedStreamIn', null, global);
goog.exportSymbol('proto.cloudstate.eventsourced.EventSourcedStreamIn.MessageCase', null, global);
goog.exportSymbol('proto.cloudstate.eventsourced.EventSourcedStreamOut', null, global);
goog.exportSymbol('proto.cloudstate.eventsourced.EventSourcedStreamOut.MessageCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.eventsourced.EventSourcedInit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.eventsourced.EventSourcedInit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.eventsourced.EventSourcedInit.displayName = 'proto.cloudstate.eventsourced.EventSourcedInit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.eventsourced.EventSourcedSnapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.eventsourced.EventSourcedSnapshot.displayName = 'proto.cloudstate.eventsourced.EventSourcedSnapshot';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.eventsourced.EventSourcedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.eventsourced.EventSourcedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.eventsourced.EventSourcedEvent.displayName = 'proto.cloudstate.eventsourced.EventSourcedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.eventsourced.EventSourcedReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.eventsourced.EventSourcedReply.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.eventsourced.EventSourcedReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.eventsourced.EventSourcedReply.displayName = 'proto.cloudstate.eventsourced.EventSourcedReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cloudstate.eventsourced.EventSourcedStreamIn.oneofGroups_);
};
goog.inherits(proto.cloudstate.eventsourced.EventSourcedStreamIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.eventsourced.EventSourcedStreamIn.displayName = 'proto.cloudstate.eventsourced.EventSourcedStreamIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cloudstate.eventsourced.EventSourcedStreamOut.oneofGroups_);
};
goog.inherits(proto.cloudstate.eventsourced.EventSourcedStreamOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.eventsourced.EventSourcedStreamOut.displayName = 'proto.cloudstate.eventsourced.EventSourcedStreamOut';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.eventsourced.EventSourcedInit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.eventsourced.EventSourcedInit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedInit.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entityId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    snapshot: (f = msg.getSnapshot()) && proto.cloudstate.eventsourced.EventSourcedSnapshot.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.eventsourced.EventSourcedInit}
 */
proto.cloudstate.eventsourced.EventSourcedInit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.eventsourced.EventSourcedInit;
  return proto.cloudstate.eventsourced.EventSourcedInit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.eventsourced.EventSourcedInit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.eventsourced.EventSourcedInit}
 */
proto.cloudstate.eventsourced.EventSourcedInit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    case 3:
      var value = new proto.cloudstate.eventsourced.EventSourcedSnapshot;
      reader.readMessage(value,proto.cloudstate.eventsourced.EventSourcedSnapshot.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.eventsourced.EventSourcedInit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.eventsourced.EventSourcedInit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedInit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cloudstate.eventsourced.EventSourcedSnapshot.serializeBinaryToWriter
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedInit} returns this
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string entity_id = 2;
 * @return {string}
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedInit} returns this
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EventSourcedSnapshot snapshot = 3;
 * @return {?proto.cloudstate.eventsourced.EventSourcedSnapshot}
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.getSnapshot = function() {
  return /** @type{?proto.cloudstate.eventsourced.EventSourcedSnapshot} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.eventsourced.EventSourcedSnapshot, 3));
};


/**
 * @param {?proto.cloudstate.eventsourced.EventSourcedSnapshot|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedInit} returns this
*/
proto.cloudstate.eventsourced.EventSourcedInit.prototype.setSnapshot = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedInit} returns this
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedInit.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.eventsourced.EventSourcedSnapshot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.eventsourced.EventSourcedSnapshot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.toObject = function(includeInstance, msg) {
  var f, obj = {
    snapshotSequence: jspb.Message.getFieldWithDefault(msg, 1, 0),
    snapshot: (f = msg.getSnapshot()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.eventsourced.EventSourcedSnapshot}
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.eventsourced.EventSourcedSnapshot;
  return proto.cloudstate.eventsourced.EventSourcedSnapshot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.eventsourced.EventSourcedSnapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.eventsourced.EventSourcedSnapshot}
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSnapshotSequence(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.eventsourced.EventSourcedSnapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.eventsourced.EventSourcedSnapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSnapshotSequence();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 snapshot_sequence = 1;
 * @return {number}
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.prototype.getSnapshotSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedSnapshot} returns this
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.prototype.setSnapshotSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Any snapshot = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.prototype.getSnapshot = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedSnapshot} returns this
*/
proto.cloudstate.eventsourced.EventSourcedSnapshot.prototype.setSnapshot = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedSnapshot} returns this
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedSnapshot.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.eventsourced.EventSourcedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.eventsourced.EventSourcedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.eventsourced.EventSourcedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    sequence: jspb.Message.getFieldWithDefault(msg, 1, 0),
    payload: (f = msg.getPayload()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.eventsourced.EventSourcedEvent}
 */
proto.cloudstate.eventsourced.EventSourcedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.eventsourced.EventSourcedEvent;
  return proto.cloudstate.eventsourced.EventSourcedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.eventsourced.EventSourcedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.eventsourced.EventSourcedEvent}
 */
proto.cloudstate.eventsourced.EventSourcedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequence(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.eventsourced.EventSourcedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.eventsourced.EventSourcedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.eventsourced.EventSourcedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSequence();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 sequence = 1;
 * @return {number}
 */
proto.cloudstate.eventsourced.EventSourcedEvent.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedEvent} returns this
 */
proto.cloudstate.eventsourced.EventSourcedEvent.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.Any payload = 2;
 * @return {?proto.google.protobuf.Any}
 */
proto.cloudstate.eventsourced.EventSourcedEvent.prototype.getPayload = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedEvent} returns this
*/
proto.cloudstate.eventsourced.EventSourcedEvent.prototype.setPayload = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedEvent} returns this
 */
proto.cloudstate.eventsourced.EventSourcedEvent.prototype.clearPayload = function() {
  return this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedEvent.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.eventsourced.EventSourcedReply.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.eventsourced.EventSourcedReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.eventsourced.EventSourcedReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clientAction: (f = msg.getClientAction()) && cloudstate_entity_pb.ClientAction.toObject(includeInstance, f),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    cloudstate_entity_pb.SideEffect.toObject, includeInstance),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    snapshot: (f = msg.getSnapshot()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply}
 */
proto.cloudstate.eventsourced.EventSourcedReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.eventsourced.EventSourcedReply;
  return proto.cloudstate.eventsourced.EventSourcedReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.eventsourced.EventSourcedReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply}
 */
proto.cloudstate.eventsourced.EventSourcedReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new cloudstate_entity_pb.ClientAction;
      reader.readMessage(value,cloudstate_entity_pb.ClientAction.deserializeBinaryFromReader);
      msg.setClientAction(value);
      break;
    case 3:
      var value = new cloudstate_entity_pb.SideEffect;
      reader.readMessage(value,cloudstate_entity_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    case 4:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 5:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setSnapshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.eventsourced.EventSourcedReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.eventsourced.EventSourcedReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClientAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cloudstate_entity_pb.ClientAction.serializeBinaryToWriter
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cloudstate_entity_pb.SideEffect.serializeBinaryToWriter
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getSnapshot();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 command_id = 1;
 * @return {number}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional cloudstate.ClientAction client_action = 2;
 * @return {?proto.cloudstate.ClientAction}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.getClientAction = function() {
  return /** @type{?proto.cloudstate.ClientAction} */ (
    jspb.Message.getWrapperField(this, cloudstate_entity_pb.ClientAction, 2));
};


/**
 * @param {?proto.cloudstate.ClientAction|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
*/
proto.cloudstate.eventsourced.EventSourcedReply.prototype.setClientAction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.clearClientAction = function() {
  return this.setClientAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.hasClientAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated cloudstate.SideEffect side_effects = 3;
 * @return {!Array<!proto.cloudstate.SideEffect>}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.cloudstate.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, cloudstate_entity_pb.SideEffect, 3));
};


/**
 * @param {!Array<!proto.cloudstate.SideEffect>} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
*/
proto.cloudstate.eventsourced.EventSourcedReply.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cloudstate.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cloudstate.SideEffect}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cloudstate.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


/**
 * repeated google.protobuf.Any events = 4;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 4));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
*/
proto.cloudstate.eventsourced.EventSourcedReply.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional google.protobuf.Any snapshot = 5;
 * @return {?proto.google.protobuf.Any}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.getSnapshot = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 5));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
*/
proto.cloudstate.eventsourced.EventSourcedReply.prototype.setSnapshot = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedReply} returns this
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.clearSnapshot = function() {
  return this.setSnapshot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedReply.prototype.hasSnapshot = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.MessageCase = {
  MESSAGE_NOT_SET: 0,
  INIT: 1,
  EVENT: 2,
  COMMAND: 3
};

/**
 * @return {proto.cloudstate.eventsourced.EventSourcedStreamIn.MessageCase}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.getMessageCase = function() {
  return /** @type {proto.cloudstate.eventsourced.EventSourcedStreamIn.MessageCase} */(jspb.Message.computeOneofCase(this, proto.cloudstate.eventsourced.EventSourcedStreamIn.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.eventsourced.EventSourcedStreamIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.eventsourced.EventSourcedStreamIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: (f = msg.getInit()) && proto.cloudstate.eventsourced.EventSourcedInit.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.cloudstate.eventsourced.EventSourcedEvent.toObject(includeInstance, f),
    command: (f = msg.getCommand()) && cloudstate_entity_pb.Command.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamIn}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.eventsourced.EventSourcedStreamIn;
  return proto.cloudstate.eventsourced.EventSourcedStreamIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.eventsourced.EventSourcedStreamIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamIn}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cloudstate.eventsourced.EventSourcedInit;
      reader.readMessage(value,proto.cloudstate.eventsourced.EventSourcedInit.deserializeBinaryFromReader);
      msg.setInit(value);
      break;
    case 2:
      var value = new proto.cloudstate.eventsourced.EventSourcedEvent;
      reader.readMessage(value,proto.cloudstate.eventsourced.EventSourcedEvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 3:
      var value = new cloudstate_entity_pb.Command;
      reader.readMessage(value,cloudstate_entity_pb.Command.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.eventsourced.EventSourcedStreamIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.eventsourced.EventSourcedStreamIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cloudstate.eventsourced.EventSourcedInit.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cloudstate.eventsourced.EventSourcedEvent.serializeBinaryToWriter
    );
  }
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cloudstate_entity_pb.Command.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventSourcedInit init = 1;
 * @return {?proto.cloudstate.eventsourced.EventSourcedInit}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.getInit = function() {
  return /** @type{?proto.cloudstate.eventsourced.EventSourcedInit} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.eventsourced.EventSourcedInit, 1));
};


/**
 * @param {?proto.cloudstate.eventsourced.EventSourcedInit|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamIn} returns this
*/
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.setInit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cloudstate.eventsourced.EventSourcedStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamIn} returns this
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.clearInit = function() {
  return this.setInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.hasInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EventSourcedEvent event = 2;
 * @return {?proto.cloudstate.eventsourced.EventSourcedEvent}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.getEvent = function() {
  return /** @type{?proto.cloudstate.eventsourced.EventSourcedEvent} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.eventsourced.EventSourcedEvent, 2));
};


/**
 * @param {?proto.cloudstate.eventsourced.EventSourcedEvent|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamIn} returns this
*/
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.setEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cloudstate.eventsourced.EventSourcedStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamIn} returns this
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional cloudstate.Command command = 3;
 * @return {?proto.cloudstate.Command}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.getCommand = function() {
  return /** @type{?proto.cloudstate.Command} */ (
    jspb.Message.getWrapperField(this, cloudstate_entity_pb.Command, 3));
};


/**
 * @param {?proto.cloudstate.Command|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamIn} returns this
*/
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.setCommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cloudstate.eventsourced.EventSourcedStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamIn} returns this
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedStreamIn.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.MessageCase = {
  MESSAGE_NOT_SET: 0,
  REPLY: 1,
  FAILURE: 2
};

/**
 * @return {proto.cloudstate.eventsourced.EventSourcedStreamOut.MessageCase}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.getMessageCase = function() {
  return /** @type {proto.cloudstate.eventsourced.EventSourcedStreamOut.MessageCase} */(jspb.Message.computeOneofCase(this, proto.cloudstate.eventsourced.EventSourcedStreamOut.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.eventsourced.EventSourcedStreamOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.eventsourced.EventSourcedStreamOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    reply: (f = msg.getReply()) && proto.cloudstate.eventsourced.EventSourcedReply.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && cloudstate_entity_pb.Failure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamOut}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.eventsourced.EventSourcedStreamOut;
  return proto.cloudstate.eventsourced.EventSourcedStreamOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.eventsourced.EventSourcedStreamOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamOut}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cloudstate.eventsourced.EventSourcedReply;
      reader.readMessage(value,proto.cloudstate.eventsourced.EventSourcedReply.deserializeBinaryFromReader);
      msg.setReply(value);
      break;
    case 2:
      var value = new cloudstate_entity_pb.Failure;
      reader.readMessage(value,cloudstate_entity_pb.Failure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.eventsourced.EventSourcedStreamOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.eventsourced.EventSourcedStreamOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReply();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cloudstate.eventsourced.EventSourcedReply.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cloudstate_entity_pb.Failure.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventSourcedReply reply = 1;
 * @return {?proto.cloudstate.eventsourced.EventSourcedReply}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.getReply = function() {
  return /** @type{?proto.cloudstate.eventsourced.EventSourcedReply} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.eventsourced.EventSourcedReply, 1));
};


/**
 * @param {?proto.cloudstate.eventsourced.EventSourcedReply|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamOut} returns this
*/
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.setReply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cloudstate.eventsourced.EventSourcedStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamOut} returns this
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.clearReply = function() {
  return this.setReply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.hasReply = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional cloudstate.Failure failure = 2;
 * @return {?proto.cloudstate.Failure}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.getFailure = function() {
  return /** @type{?proto.cloudstate.Failure} */ (
    jspb.Message.getWrapperField(this, cloudstate_entity_pb.Failure, 2));
};


/**
 * @param {?proto.cloudstate.Failure|undefined} value
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamOut} returns this
*/
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cloudstate.eventsourced.EventSourcedStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.eventsourced.EventSourcedStreamOut} returns this
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.eventsourced.EventSourcedStreamOut.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.cloudstate.eventsourced);
