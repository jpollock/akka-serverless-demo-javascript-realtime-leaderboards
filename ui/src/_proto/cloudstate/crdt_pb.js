// source: cloudstate/crdt.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var cloudstate_entity_pb = require('../cloudstate/entity_pb.js');
goog.object.extend(proto, cloudstate_entity_pb);
goog.exportSymbol('proto.cloudstate.crdt.CrdtClock', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtDelete', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtDelta.DeltaCase', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtInit', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtReply', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtState', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtState.StateCase', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtStateAction', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtStateAction.ActionCase', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtStreamCancelledResponse', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtStreamIn', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtStreamIn.MessageCase', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtStreamOut', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtStreamOut.MessageCase', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtStreamedMessage', null, global);
goog.exportSymbol('proto.cloudstate.crdt.CrdtWriteConsistency', null, global);
goog.exportSymbol('proto.cloudstate.crdt.FlagDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.FlagState', null, global);
goog.exportSymbol('proto.cloudstate.crdt.GCounterDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.GCounterState', null, global);
goog.exportSymbol('proto.cloudstate.crdt.GSetDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.GSetState', null, global);
goog.exportSymbol('proto.cloudstate.crdt.LWWRegisterDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.LWWRegisterState', null, global);
goog.exportSymbol('proto.cloudstate.crdt.ORMapDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.ORMapEntry', null, global);
goog.exportSymbol('proto.cloudstate.crdt.ORMapEntryDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.ORMapState', null, global);
goog.exportSymbol('proto.cloudstate.crdt.ORSetDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.ORSetState', null, global);
goog.exportSymbol('proto.cloudstate.crdt.PNCounterDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.PNCounterState', null, global);
goog.exportSymbol('proto.cloudstate.crdt.VoteDelta', null, global);
goog.exportSymbol('proto.cloudstate.crdt.VoteState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtStreamIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_);
};
goog.inherits(proto.cloudstate.crdt.CrdtStreamIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtStreamIn.displayName = 'proto.cloudstate.crdt.CrdtStreamIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtStreamOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cloudstate.crdt.CrdtStreamOut.oneofGroups_);
};
goog.inherits(proto.cloudstate.crdt.CrdtStreamOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtStreamOut.displayName = 'proto.cloudstate.crdt.CrdtStreamOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cloudstate.crdt.CrdtState.oneofGroups_);
};
goog.inherits(proto.cloudstate.crdt.CrdtState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtState.displayName = 'proto.cloudstate.crdt.CrdtState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.GCounterState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.GCounterState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.GCounterState.displayName = 'proto.cloudstate.crdt.GCounterState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.PNCounterState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.PNCounterState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.PNCounterState.displayName = 'proto.cloudstate.crdt.PNCounterState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.GSetState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.GSetState.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.GSetState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.GSetState.displayName = 'proto.cloudstate.crdt.GSetState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.ORSetState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.ORSetState.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.ORSetState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.ORSetState.displayName = 'proto.cloudstate.crdt.ORSetState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.LWWRegisterState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.LWWRegisterState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.LWWRegisterState.displayName = 'proto.cloudstate.crdt.LWWRegisterState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.FlagState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.FlagState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.FlagState.displayName = 'proto.cloudstate.crdt.FlagState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.ORMapState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.ORMapState.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.ORMapState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.ORMapState.displayName = 'proto.cloudstate.crdt.ORMapState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.ORMapEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.ORMapEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.ORMapEntry.displayName = 'proto.cloudstate.crdt.ORMapEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.VoteState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.VoteState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.VoteState.displayName = 'proto.cloudstate.crdt.VoteState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cloudstate.crdt.CrdtDelta.oneofGroups_);
};
goog.inherits(proto.cloudstate.crdt.CrdtDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtDelta.displayName = 'proto.cloudstate.crdt.CrdtDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.GCounterDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.GCounterDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.GCounterDelta.displayName = 'proto.cloudstate.crdt.GCounterDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.PNCounterDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.PNCounterDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.PNCounterDelta.displayName = 'proto.cloudstate.crdt.PNCounterDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.GSetDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.GSetDelta.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.GSetDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.GSetDelta.displayName = 'proto.cloudstate.crdt.GSetDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.ORSetDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.ORSetDelta.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.ORSetDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.ORSetDelta.displayName = 'proto.cloudstate.crdt.ORSetDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.LWWRegisterDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.LWWRegisterDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.LWWRegisterDelta.displayName = 'proto.cloudstate.crdt.LWWRegisterDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.FlagDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.FlagDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.FlagDelta.displayName = 'proto.cloudstate.crdt.FlagDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.ORMapDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.ORMapDelta.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.ORMapDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.ORMapDelta.displayName = 'proto.cloudstate.crdt.ORMapDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.ORMapEntryDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.ORMapEntryDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.ORMapEntryDelta.displayName = 'proto.cloudstate.crdt.ORMapEntryDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.VoteDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.VoteDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.VoteDelta.displayName = 'proto.cloudstate.crdt.VoteDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtInit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.CrdtInit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtInit.displayName = 'proto.cloudstate.crdt.CrdtInit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtDelete = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cloudstate.crdt.CrdtDelete, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtDelete.displayName = 'proto.cloudstate.crdt.CrdtDelete';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.CrdtReply.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.CrdtReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtReply.displayName = 'proto.cloudstate.crdt.CrdtReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtStateAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.cloudstate.crdt.CrdtStateAction.oneofGroups_);
};
goog.inherits(proto.cloudstate.crdt.CrdtStateAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtStateAction.displayName = 'proto.cloudstate.crdt.CrdtStateAction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtStreamedMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.CrdtStreamedMessage.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.CrdtStreamedMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtStreamedMessage.displayName = 'proto.cloudstate.crdt.CrdtStreamedMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.cloudstate.crdt.CrdtStreamCancelledResponse.repeatedFields_, null);
};
goog.inherits(proto.cloudstate.crdt.CrdtStreamCancelledResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cloudstate.crdt.CrdtStreamCancelledResponse.displayName = 'proto.cloudstate.crdt.CrdtStreamCancelledResponse';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.cloudstate.crdt.CrdtStreamIn.MessageCase = {
  MESSAGE_NOT_SET: 0,
  INIT: 1,
  STATE: 2,
  CHANGED: 3,
  DELETED: 4,
  COMMAND: 5,
  STREAM_CANCELLED: 6
};

/**
 * @return {proto.cloudstate.crdt.CrdtStreamIn.MessageCase}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.getMessageCase = function() {
  return /** @type {proto.cloudstate.crdt.CrdtStreamIn.MessageCase} */(jspb.Message.computeOneofCase(this, proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtStreamIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtStreamIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStreamIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    init: (f = msg.getInit()) && proto.cloudstate.crdt.CrdtInit.toObject(includeInstance, f),
    state: (f = msg.getState()) && proto.cloudstate.crdt.CrdtState.toObject(includeInstance, f),
    changed: (f = msg.getChanged()) && proto.cloudstate.crdt.CrdtDelta.toObject(includeInstance, f),
    deleted: (f = msg.getDeleted()) && proto.cloudstate.crdt.CrdtDelete.toObject(includeInstance, f),
    command: (f = msg.getCommand()) && cloudstate_entity_pb.Command.toObject(includeInstance, f),
    streamCancelled: (f = msg.getStreamCancelled()) && cloudstate_entity_pb.StreamCancelled.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtStreamIn}
 */
proto.cloudstate.crdt.CrdtStreamIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtStreamIn;
  return proto.cloudstate.crdt.CrdtStreamIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtStreamIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtStreamIn}
 */
proto.cloudstate.crdt.CrdtStreamIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cloudstate.crdt.CrdtInit;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtInit.deserializeBinaryFromReader);
      msg.setInit(value);
      break;
    case 2:
      var value = new proto.cloudstate.crdt.CrdtState;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 3:
      var value = new proto.cloudstate.crdt.CrdtDelta;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtDelta.deserializeBinaryFromReader);
      msg.setChanged(value);
      break;
    case 4:
      var value = new proto.cloudstate.crdt.CrdtDelete;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtDelete.deserializeBinaryFromReader);
      msg.setDeleted(value);
      break;
    case 5:
      var value = new cloudstate_entity_pb.Command;
      reader.readMessage(value,cloudstate_entity_pb.Command.deserializeBinaryFromReader);
      msg.setCommand(value);
      break;
    case 6:
      var value = new cloudstate_entity_pb.StreamCancelled;
      reader.readMessage(value,cloudstate_entity_pb.StreamCancelled.deserializeBinaryFromReader);
      msg.setStreamCancelled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtStreamIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtStreamIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStreamIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cloudstate.crdt.CrdtInit.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cloudstate.crdt.CrdtState.serializeBinaryToWriter
    );
  }
  f = message.getChanged();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cloudstate.crdt.CrdtDelta.serializeBinaryToWriter
    );
  }
  f = message.getDeleted();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cloudstate.crdt.CrdtDelete.serializeBinaryToWriter
    );
  }
  f = message.getCommand();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      cloudstate_entity_pb.Command.serializeBinaryToWriter
    );
  }
  f = message.getStreamCancelled();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      cloudstate_entity_pb.StreamCancelled.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrdtInit init = 1;
 * @return {?proto.cloudstate.crdt.CrdtInit}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.getInit = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtInit} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtInit, 1));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtInit|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
*/
proto.cloudstate.crdt.CrdtStreamIn.prototype.setInit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.clearInit = function() {
  return this.setInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.hasInit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CrdtState state = 2;
 * @return {?proto.cloudstate.crdt.CrdtState}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.getState = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtState, 2));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
*/
proto.cloudstate.crdt.CrdtStreamIn.prototype.setState = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CrdtDelta changed = 3;
 * @return {?proto.cloudstate.crdt.CrdtDelta}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.getChanged = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtDelta, 3));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
*/
proto.cloudstate.crdt.CrdtStreamIn.prototype.setChanged = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.clearChanged = function() {
  return this.setChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.hasChanged = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CrdtDelete deleted = 4;
 * @return {?proto.cloudstate.crdt.CrdtDelete}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.getDeleted = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtDelete} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtDelete, 4));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtDelete|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
*/
proto.cloudstate.crdt.CrdtStreamIn.prototype.setDeleted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.clearDeleted = function() {
  return this.setDeleted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.hasDeleted = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional cloudstate.Command command = 5;
 * @return {?proto.cloudstate.Command}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.getCommand = function() {
  return /** @type{?proto.cloudstate.Command} */ (
    jspb.Message.getWrapperField(this, cloudstate_entity_pb.Command, 5));
};


/**
 * @param {?proto.cloudstate.Command|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
*/
proto.cloudstate.crdt.CrdtStreamIn.prototype.setCommand = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.clearCommand = function() {
  return this.setCommand(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.hasCommand = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional cloudstate.StreamCancelled stream_cancelled = 6;
 * @return {?proto.cloudstate.StreamCancelled}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.getStreamCancelled = function() {
  return /** @type{?proto.cloudstate.StreamCancelled} */ (
    jspb.Message.getWrapperField(this, cloudstate_entity_pb.StreamCancelled, 6));
};


/**
 * @param {?proto.cloudstate.StreamCancelled|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
*/
proto.cloudstate.crdt.CrdtStreamIn.prototype.setStreamCancelled = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cloudstate.crdt.CrdtStreamIn.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamIn} returns this
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.clearStreamCancelled = function() {
  return this.setStreamCancelled(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamIn.prototype.hasStreamCancelled = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cloudstate.crdt.CrdtStreamOut.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.cloudstate.crdt.CrdtStreamOut.MessageCase = {
  MESSAGE_NOT_SET: 0,
  REPLY: 1,
  STREAMED_MESSAGE: 2,
  STREAM_CANCELLED_RESPONSE: 3,
  FAILURE: 4
};

/**
 * @return {proto.cloudstate.crdt.CrdtStreamOut.MessageCase}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.getMessageCase = function() {
  return /** @type {proto.cloudstate.crdt.CrdtStreamOut.MessageCase} */(jspb.Message.computeOneofCase(this, proto.cloudstate.crdt.CrdtStreamOut.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtStreamOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtStreamOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStreamOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    reply: (f = msg.getReply()) && proto.cloudstate.crdt.CrdtReply.toObject(includeInstance, f),
    streamedMessage: (f = msg.getStreamedMessage()) && proto.cloudstate.crdt.CrdtStreamedMessage.toObject(includeInstance, f),
    streamCancelledResponse: (f = msg.getStreamCancelledResponse()) && proto.cloudstate.crdt.CrdtStreamCancelledResponse.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && cloudstate_entity_pb.Failure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtStreamOut}
 */
proto.cloudstate.crdt.CrdtStreamOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtStreamOut;
  return proto.cloudstate.crdt.CrdtStreamOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtStreamOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtStreamOut}
 */
proto.cloudstate.crdt.CrdtStreamOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cloudstate.crdt.CrdtReply;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtReply.deserializeBinaryFromReader);
      msg.setReply(value);
      break;
    case 2:
      var value = new proto.cloudstate.crdt.CrdtStreamedMessage;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtStreamedMessage.deserializeBinaryFromReader);
      msg.setStreamedMessage(value);
      break;
    case 3:
      var value = new proto.cloudstate.crdt.CrdtStreamCancelledResponse;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtStreamCancelledResponse.deserializeBinaryFromReader);
      msg.setStreamCancelledResponse(value);
      break;
    case 4:
      var value = new cloudstate_entity_pb.Failure;
      reader.readMessage(value,cloudstate_entity_pb.Failure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtStreamOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtStreamOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStreamOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReply();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cloudstate.crdt.CrdtReply.serializeBinaryToWriter
    );
  }
  f = message.getStreamedMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cloudstate.crdt.CrdtStreamedMessage.serializeBinaryToWriter
    );
  }
  f = message.getStreamCancelledResponse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cloudstate.crdt.CrdtStreamCancelledResponse.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      cloudstate_entity_pb.Failure.serializeBinaryToWriter
    );
  }
};


/**
 * optional CrdtReply reply = 1;
 * @return {?proto.cloudstate.crdt.CrdtReply}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.getReply = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtReply} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtReply, 1));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtReply|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamOut} returns this
*/
proto.cloudstate.crdt.CrdtStreamOut.prototype.setReply = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cloudstate.crdt.CrdtStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamOut} returns this
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.clearReply = function() {
  return this.setReply(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.hasReply = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CrdtStreamedMessage streamed_message = 2;
 * @return {?proto.cloudstate.crdt.CrdtStreamedMessage}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.getStreamedMessage = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtStreamedMessage} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtStreamedMessage, 2));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtStreamedMessage|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamOut} returns this
*/
proto.cloudstate.crdt.CrdtStreamOut.prototype.setStreamedMessage = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cloudstate.crdt.CrdtStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamOut} returns this
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.clearStreamedMessage = function() {
  return this.setStreamedMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.hasStreamedMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CrdtStreamCancelledResponse stream_cancelled_response = 3;
 * @return {?proto.cloudstate.crdt.CrdtStreamCancelledResponse}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.getStreamCancelledResponse = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtStreamCancelledResponse} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtStreamCancelledResponse, 3));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtStreamCancelledResponse|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamOut} returns this
*/
proto.cloudstate.crdt.CrdtStreamOut.prototype.setStreamCancelledResponse = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cloudstate.crdt.CrdtStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamOut} returns this
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.clearStreamCancelledResponse = function() {
  return this.setStreamCancelledResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.hasStreamCancelledResponse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional cloudstate.Failure failure = 4;
 * @return {?proto.cloudstate.Failure}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.getFailure = function() {
  return /** @type{?proto.cloudstate.Failure} */ (
    jspb.Message.getWrapperField(this, cloudstate_entity_pb.Failure, 4));
};


/**
 * @param {?proto.cloudstate.Failure|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamOut} returns this
*/
proto.cloudstate.crdt.CrdtStreamOut.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cloudstate.crdt.CrdtStreamOut.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamOut} returns this
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamOut.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cloudstate.crdt.CrdtState.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.cloudstate.crdt.CrdtState.StateCase = {
  STATE_NOT_SET: 0,
  GCOUNTER: 1,
  PNCOUNTER: 2,
  GSET: 3,
  ORSET: 4,
  LWWREGISTER: 5,
  FLAG: 6,
  ORMAP: 7,
  VOTE: 8
};

/**
 * @return {proto.cloudstate.crdt.CrdtState.StateCase}
 */
proto.cloudstate.crdt.CrdtState.prototype.getStateCase = function() {
  return /** @type {proto.cloudstate.crdt.CrdtState.StateCase} */(jspb.Message.computeOneofCase(this, proto.cloudstate.crdt.CrdtState.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtState.toObject = function(includeInstance, msg) {
  var f, obj = {
    gcounter: (f = msg.getGcounter()) && proto.cloudstate.crdt.GCounterState.toObject(includeInstance, f),
    pncounter: (f = msg.getPncounter()) && proto.cloudstate.crdt.PNCounterState.toObject(includeInstance, f),
    gset: (f = msg.getGset()) && proto.cloudstate.crdt.GSetState.toObject(includeInstance, f),
    orset: (f = msg.getOrset()) && proto.cloudstate.crdt.ORSetState.toObject(includeInstance, f),
    lwwregister: (f = msg.getLwwregister()) && proto.cloudstate.crdt.LWWRegisterState.toObject(includeInstance, f),
    flag: (f = msg.getFlag()) && proto.cloudstate.crdt.FlagState.toObject(includeInstance, f),
    ormap: (f = msg.getOrmap()) && proto.cloudstate.crdt.ORMapState.toObject(includeInstance, f),
    vote: (f = msg.getVote()) && proto.cloudstate.crdt.VoteState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtState}
 */
proto.cloudstate.crdt.CrdtState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtState;
  return proto.cloudstate.crdt.CrdtState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtState}
 */
proto.cloudstate.crdt.CrdtState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cloudstate.crdt.GCounterState;
      reader.readMessage(value,proto.cloudstate.crdt.GCounterState.deserializeBinaryFromReader);
      msg.setGcounter(value);
      break;
    case 2:
      var value = new proto.cloudstate.crdt.PNCounterState;
      reader.readMessage(value,proto.cloudstate.crdt.PNCounterState.deserializeBinaryFromReader);
      msg.setPncounter(value);
      break;
    case 3:
      var value = new proto.cloudstate.crdt.GSetState;
      reader.readMessage(value,proto.cloudstate.crdt.GSetState.deserializeBinaryFromReader);
      msg.setGset(value);
      break;
    case 4:
      var value = new proto.cloudstate.crdt.ORSetState;
      reader.readMessage(value,proto.cloudstate.crdt.ORSetState.deserializeBinaryFromReader);
      msg.setOrset(value);
      break;
    case 5:
      var value = new proto.cloudstate.crdt.LWWRegisterState;
      reader.readMessage(value,proto.cloudstate.crdt.LWWRegisterState.deserializeBinaryFromReader);
      msg.setLwwregister(value);
      break;
    case 6:
      var value = new proto.cloudstate.crdt.FlagState;
      reader.readMessage(value,proto.cloudstate.crdt.FlagState.deserializeBinaryFromReader);
      msg.setFlag(value);
      break;
    case 7:
      var value = new proto.cloudstate.crdt.ORMapState;
      reader.readMessage(value,proto.cloudstate.crdt.ORMapState.deserializeBinaryFromReader);
      msg.setOrmap(value);
      break;
    case 8:
      var value = new proto.cloudstate.crdt.VoteState;
      reader.readMessage(value,proto.cloudstate.crdt.VoteState.deserializeBinaryFromReader);
      msg.setVote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGcounter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cloudstate.crdt.GCounterState.serializeBinaryToWriter
    );
  }
  f = message.getPncounter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cloudstate.crdt.PNCounterState.serializeBinaryToWriter
    );
  }
  f = message.getGset();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cloudstate.crdt.GSetState.serializeBinaryToWriter
    );
  }
  f = message.getOrset();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cloudstate.crdt.ORSetState.serializeBinaryToWriter
    );
  }
  f = message.getLwwregister();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cloudstate.crdt.LWWRegisterState.serializeBinaryToWriter
    );
  }
  f = message.getFlag();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cloudstate.crdt.FlagState.serializeBinaryToWriter
    );
  }
  f = message.getOrmap();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cloudstate.crdt.ORMapState.serializeBinaryToWriter
    );
  }
  f = message.getVote();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.cloudstate.crdt.VoteState.serializeBinaryToWriter
    );
  }
};


/**
 * optional GCounterState gcounter = 1;
 * @return {?proto.cloudstate.crdt.GCounterState}
 */
proto.cloudstate.crdt.CrdtState.prototype.getGcounter = function() {
  return /** @type{?proto.cloudstate.crdt.GCounterState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.GCounterState, 1));
};


/**
 * @param {?proto.cloudstate.crdt.GCounterState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
*/
proto.cloudstate.crdt.CrdtState.prototype.setGcounter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cloudstate.crdt.CrdtState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
 */
proto.cloudstate.crdt.CrdtState.prototype.clearGcounter = function() {
  return this.setGcounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtState.prototype.hasGcounter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PNCounterState pncounter = 2;
 * @return {?proto.cloudstate.crdt.PNCounterState}
 */
proto.cloudstate.crdt.CrdtState.prototype.getPncounter = function() {
  return /** @type{?proto.cloudstate.crdt.PNCounterState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.PNCounterState, 2));
};


/**
 * @param {?proto.cloudstate.crdt.PNCounterState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
*/
proto.cloudstate.crdt.CrdtState.prototype.setPncounter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cloudstate.crdt.CrdtState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
 */
proto.cloudstate.crdt.CrdtState.prototype.clearPncounter = function() {
  return this.setPncounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtState.prototype.hasPncounter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GSetState gset = 3;
 * @return {?proto.cloudstate.crdt.GSetState}
 */
proto.cloudstate.crdt.CrdtState.prototype.getGset = function() {
  return /** @type{?proto.cloudstate.crdt.GSetState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.GSetState, 3));
};


/**
 * @param {?proto.cloudstate.crdt.GSetState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
*/
proto.cloudstate.crdt.CrdtState.prototype.setGset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cloudstate.crdt.CrdtState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
 */
proto.cloudstate.crdt.CrdtState.prototype.clearGset = function() {
  return this.setGset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtState.prototype.hasGset = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ORSetState orset = 4;
 * @return {?proto.cloudstate.crdt.ORSetState}
 */
proto.cloudstate.crdt.CrdtState.prototype.getOrset = function() {
  return /** @type{?proto.cloudstate.crdt.ORSetState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.ORSetState, 4));
};


/**
 * @param {?proto.cloudstate.crdt.ORSetState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
*/
proto.cloudstate.crdt.CrdtState.prototype.setOrset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cloudstate.crdt.CrdtState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
 */
proto.cloudstate.crdt.CrdtState.prototype.clearOrset = function() {
  return this.setOrset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtState.prototype.hasOrset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LWWRegisterState lwwregister = 5;
 * @return {?proto.cloudstate.crdt.LWWRegisterState}
 */
proto.cloudstate.crdt.CrdtState.prototype.getLwwregister = function() {
  return /** @type{?proto.cloudstate.crdt.LWWRegisterState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.LWWRegisterState, 5));
};


/**
 * @param {?proto.cloudstate.crdt.LWWRegisterState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
*/
proto.cloudstate.crdt.CrdtState.prototype.setLwwregister = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cloudstate.crdt.CrdtState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
 */
proto.cloudstate.crdt.CrdtState.prototype.clearLwwregister = function() {
  return this.setLwwregister(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtState.prototype.hasLwwregister = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional FlagState flag = 6;
 * @return {?proto.cloudstate.crdt.FlagState}
 */
proto.cloudstate.crdt.CrdtState.prototype.getFlag = function() {
  return /** @type{?proto.cloudstate.crdt.FlagState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.FlagState, 6));
};


/**
 * @param {?proto.cloudstate.crdt.FlagState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
*/
proto.cloudstate.crdt.CrdtState.prototype.setFlag = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cloudstate.crdt.CrdtState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
 */
proto.cloudstate.crdt.CrdtState.prototype.clearFlag = function() {
  return this.setFlag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtState.prototype.hasFlag = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ORMapState ormap = 7;
 * @return {?proto.cloudstate.crdt.ORMapState}
 */
proto.cloudstate.crdt.CrdtState.prototype.getOrmap = function() {
  return /** @type{?proto.cloudstate.crdt.ORMapState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.ORMapState, 7));
};


/**
 * @param {?proto.cloudstate.crdt.ORMapState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
*/
proto.cloudstate.crdt.CrdtState.prototype.setOrmap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cloudstate.crdt.CrdtState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
 */
proto.cloudstate.crdt.CrdtState.prototype.clearOrmap = function() {
  return this.setOrmap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtState.prototype.hasOrmap = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional VoteState vote = 8;
 * @return {?proto.cloudstate.crdt.VoteState}
 */
proto.cloudstate.crdt.CrdtState.prototype.getVote = function() {
  return /** @type{?proto.cloudstate.crdt.VoteState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.VoteState, 8));
};


/**
 * @param {?proto.cloudstate.crdt.VoteState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
*/
proto.cloudstate.crdt.CrdtState.prototype.setVote = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.cloudstate.crdt.CrdtState.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtState} returns this
 */
proto.cloudstate.crdt.CrdtState.prototype.clearVote = function() {
  return this.setVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtState.prototype.hasVote = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.GCounterState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.GCounterState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.GCounterState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.GCounterState.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.GCounterState}
 */
proto.cloudstate.crdt.GCounterState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.GCounterState;
  return proto.cloudstate.crdt.GCounterState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.GCounterState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.GCounterState}
 */
proto.cloudstate.crdt.GCounterState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.GCounterState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.GCounterState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.GCounterState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.GCounterState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 value = 1;
 * @return {number}
 */
proto.cloudstate.crdt.GCounterState.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.GCounterState} returns this
 */
proto.cloudstate.crdt.GCounterState.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.PNCounterState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.PNCounterState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.PNCounterState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.PNCounterState.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.PNCounterState}
 */
proto.cloudstate.crdt.PNCounterState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.PNCounterState;
  return proto.cloudstate.crdt.PNCounterState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.PNCounterState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.PNCounterState}
 */
proto.cloudstate.crdt.PNCounterState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.PNCounterState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.PNCounterState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.PNCounterState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.PNCounterState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 value = 1;
 * @return {number}
 */
proto.cloudstate.crdt.PNCounterState.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.PNCounterState} returns this
 */
proto.cloudstate.crdt.PNCounterState.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.GSetState.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.GSetState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.GSetState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.GSetState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.GSetState.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.GSetState}
 */
proto.cloudstate.crdt.GSetState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.GSetState;
  return proto.cloudstate.crdt.GSetState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.GSetState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.GSetState}
 */
proto.cloudstate.crdt.GSetState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.GSetState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.GSetState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.GSetState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.GSetState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.Any items = 1;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.cloudstate.crdt.GSetState.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.cloudstate.crdt.GSetState} returns this
*/
proto.cloudstate.crdt.GSetState.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.GSetState.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.GSetState} returns this
 */
proto.cloudstate.crdt.GSetState.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.ORSetState.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.ORSetState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.ORSetState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.ORSetState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORSetState.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.ORSetState}
 */
proto.cloudstate.crdt.ORSetState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.ORSetState;
  return proto.cloudstate.crdt.ORSetState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.ORSetState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.ORSetState}
 */
proto.cloudstate.crdt.ORSetState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.ORSetState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.ORSetState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.ORSetState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORSetState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.Any items = 1;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.cloudstate.crdt.ORSetState.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.cloudstate.crdt.ORSetState} returns this
*/
proto.cloudstate.crdt.ORSetState.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.ORSetState.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.ORSetState} returns this
 */
proto.cloudstate.crdt.ORSetState.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.LWWRegisterState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.LWWRegisterState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.LWWRegisterState.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    clock: jspb.Message.getFieldWithDefault(msg, 2, 0),
    customClockValue: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.LWWRegisterState}
 */
proto.cloudstate.crdt.LWWRegisterState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.LWWRegisterState;
  return proto.cloudstate.crdt.LWWRegisterState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.LWWRegisterState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.LWWRegisterState}
 */
proto.cloudstate.crdt.LWWRegisterState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {!proto.cloudstate.crdt.CrdtClock} */ (reader.readEnum());
      msg.setClock(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomClockValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.LWWRegisterState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.LWWRegisterState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.LWWRegisterState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getClock();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCustomClockValue();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cloudstate.crdt.LWWRegisterState} returns this
*/
proto.cloudstate.crdt.LWWRegisterState.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.LWWRegisterState} returns this
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CrdtClock clock = 2;
 * @return {!proto.cloudstate.crdt.CrdtClock}
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.getClock = function() {
  return /** @type {!proto.cloudstate.crdt.CrdtClock} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cloudstate.crdt.CrdtClock} value
 * @return {!proto.cloudstate.crdt.LWWRegisterState} returns this
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.setClock = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 custom_clock_value = 3;
 * @return {number}
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.getCustomClockValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.LWWRegisterState} returns this
 */
proto.cloudstate.crdt.LWWRegisterState.prototype.setCustomClockValue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.FlagState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.FlagState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.FlagState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.FlagState.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.FlagState}
 */
proto.cloudstate.crdt.FlagState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.FlagState;
  return proto.cloudstate.crdt.FlagState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.FlagState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.FlagState}
 */
proto.cloudstate.crdt.FlagState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.FlagState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.FlagState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.FlagState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.FlagState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool value = 1;
 * @return {boolean}
 */
proto.cloudstate.crdt.FlagState.prototype.getValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cloudstate.crdt.FlagState} returns this
 */
proto.cloudstate.crdt.FlagState.prototype.setValue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.ORMapState.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.ORMapState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.ORMapState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.ORMapState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORMapState.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.cloudstate.crdt.ORMapEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.ORMapState}
 */
proto.cloudstate.crdt.ORMapState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.ORMapState;
  return proto.cloudstate.crdt.ORMapState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.ORMapState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.ORMapState}
 */
proto.cloudstate.crdt.ORMapState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cloudstate.crdt.ORMapEntry;
      reader.readMessage(value,proto.cloudstate.crdt.ORMapEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.ORMapState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.ORMapState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.ORMapState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORMapState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.cloudstate.crdt.ORMapEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ORMapEntry entries = 1;
 * @return {!Array<!proto.cloudstate.crdt.ORMapEntry>}
 */
proto.cloudstate.crdt.ORMapState.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.cloudstate.crdt.ORMapEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cloudstate.crdt.ORMapEntry, 1));
};


/**
 * @param {!Array<!proto.cloudstate.crdt.ORMapEntry>} value
 * @return {!proto.cloudstate.crdt.ORMapState} returns this
*/
proto.cloudstate.crdt.ORMapState.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cloudstate.crdt.ORMapEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cloudstate.crdt.ORMapEntry}
 */
proto.cloudstate.crdt.ORMapState.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cloudstate.crdt.ORMapEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.ORMapState} returns this
 */
proto.cloudstate.crdt.ORMapState.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.ORMapEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.ORMapEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.ORMapEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORMapEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.cloudstate.crdt.CrdtState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.ORMapEntry}
 */
proto.cloudstate.crdt.ORMapEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.ORMapEntry;
  return proto.cloudstate.crdt.ORMapEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.ORMapEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.ORMapEntry}
 */
proto.cloudstate.crdt.ORMapEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.cloudstate.crdt.CrdtState;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtState.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.ORMapEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.ORMapEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.ORMapEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORMapEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cloudstate.crdt.CrdtState.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any key = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.ORMapEntry.prototype.getKey = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cloudstate.crdt.ORMapEntry} returns this
*/
proto.cloudstate.crdt.ORMapEntry.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.ORMapEntry} returns this
 */
proto.cloudstate.crdt.ORMapEntry.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.ORMapEntry.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CrdtState value = 2;
 * @return {?proto.cloudstate.crdt.CrdtState}
 */
proto.cloudstate.crdt.ORMapEntry.prototype.getValue = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtState, 2));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtState|undefined} value
 * @return {!proto.cloudstate.crdt.ORMapEntry} returns this
*/
proto.cloudstate.crdt.ORMapEntry.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.ORMapEntry} returns this
 */
proto.cloudstate.crdt.ORMapEntry.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.ORMapEntry.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.VoteState.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.VoteState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.VoteState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.VoteState.toObject = function(includeInstance, msg) {
  var f, obj = {
    votesFor: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalVoters: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selfVote: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.VoteState}
 */
proto.cloudstate.crdt.VoteState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.VoteState;
  return proto.cloudstate.crdt.VoteState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.VoteState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.VoteState}
 */
proto.cloudstate.crdt.VoteState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVotesFor(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalVoters(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSelfVote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.VoteState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.VoteState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.VoteState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.VoteState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVotesFor();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTotalVoters();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSelfVote();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional uint32 votes_for = 1;
 * @return {number}
 */
proto.cloudstate.crdt.VoteState.prototype.getVotesFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.VoteState} returns this
 */
proto.cloudstate.crdt.VoteState.prototype.setVotesFor = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 total_voters = 2;
 * @return {number}
 */
proto.cloudstate.crdt.VoteState.prototype.getTotalVoters = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.VoteState} returns this
 */
proto.cloudstate.crdt.VoteState.prototype.setTotalVoters = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool self_vote = 3;
 * @return {boolean}
 */
proto.cloudstate.crdt.VoteState.prototype.getSelfVote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cloudstate.crdt.VoteState} returns this
 */
proto.cloudstate.crdt.VoteState.prototype.setSelfVote = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cloudstate.crdt.CrdtDelta.oneofGroups_ = [[1,2,3,4,5,6,7,8]];

/**
 * @enum {number}
 */
proto.cloudstate.crdt.CrdtDelta.DeltaCase = {
  DELTA_NOT_SET: 0,
  GCOUNTER: 1,
  PNCOUNTER: 2,
  GSET: 3,
  ORSET: 4,
  LWWREGISTER: 5,
  FLAG: 6,
  ORMAP: 7,
  VOTE: 8
};

/**
 * @return {proto.cloudstate.crdt.CrdtDelta.DeltaCase}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getDeltaCase = function() {
  return /** @type {proto.cloudstate.crdt.CrdtDelta.DeltaCase} */(jspb.Message.computeOneofCase(this, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    gcounter: (f = msg.getGcounter()) && proto.cloudstate.crdt.GCounterDelta.toObject(includeInstance, f),
    pncounter: (f = msg.getPncounter()) && proto.cloudstate.crdt.PNCounterDelta.toObject(includeInstance, f),
    gset: (f = msg.getGset()) && proto.cloudstate.crdt.GSetDelta.toObject(includeInstance, f),
    orset: (f = msg.getOrset()) && proto.cloudstate.crdt.ORSetDelta.toObject(includeInstance, f),
    lwwregister: (f = msg.getLwwregister()) && proto.cloudstate.crdt.LWWRegisterDelta.toObject(includeInstance, f),
    flag: (f = msg.getFlag()) && proto.cloudstate.crdt.FlagDelta.toObject(includeInstance, f),
    ormap: (f = msg.getOrmap()) && proto.cloudstate.crdt.ORMapDelta.toObject(includeInstance, f),
    vote: (f = msg.getVote()) && proto.cloudstate.crdt.VoteDelta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtDelta}
 */
proto.cloudstate.crdt.CrdtDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtDelta;
  return proto.cloudstate.crdt.CrdtDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtDelta}
 */
proto.cloudstate.crdt.CrdtDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.cloudstate.crdt.GCounterDelta;
      reader.readMessage(value,proto.cloudstate.crdt.GCounterDelta.deserializeBinaryFromReader);
      msg.setGcounter(value);
      break;
    case 2:
      var value = new proto.cloudstate.crdt.PNCounterDelta;
      reader.readMessage(value,proto.cloudstate.crdt.PNCounterDelta.deserializeBinaryFromReader);
      msg.setPncounter(value);
      break;
    case 3:
      var value = new proto.cloudstate.crdt.GSetDelta;
      reader.readMessage(value,proto.cloudstate.crdt.GSetDelta.deserializeBinaryFromReader);
      msg.setGset(value);
      break;
    case 4:
      var value = new proto.cloudstate.crdt.ORSetDelta;
      reader.readMessage(value,proto.cloudstate.crdt.ORSetDelta.deserializeBinaryFromReader);
      msg.setOrset(value);
      break;
    case 5:
      var value = new proto.cloudstate.crdt.LWWRegisterDelta;
      reader.readMessage(value,proto.cloudstate.crdt.LWWRegisterDelta.deserializeBinaryFromReader);
      msg.setLwwregister(value);
      break;
    case 6:
      var value = new proto.cloudstate.crdt.FlagDelta;
      reader.readMessage(value,proto.cloudstate.crdt.FlagDelta.deserializeBinaryFromReader);
      msg.setFlag(value);
      break;
    case 7:
      var value = new proto.cloudstate.crdt.ORMapDelta;
      reader.readMessage(value,proto.cloudstate.crdt.ORMapDelta.deserializeBinaryFromReader);
      msg.setOrmap(value);
      break;
    case 8:
      var value = new proto.cloudstate.crdt.VoteDelta;
      reader.readMessage(value,proto.cloudstate.crdt.VoteDelta.deserializeBinaryFromReader);
      msg.setVote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGcounter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.cloudstate.crdt.GCounterDelta.serializeBinaryToWriter
    );
  }
  f = message.getPncounter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cloudstate.crdt.PNCounterDelta.serializeBinaryToWriter
    );
  }
  f = message.getGset();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cloudstate.crdt.GSetDelta.serializeBinaryToWriter
    );
  }
  f = message.getOrset();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.cloudstate.crdt.ORSetDelta.serializeBinaryToWriter
    );
  }
  f = message.getLwwregister();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cloudstate.crdt.LWWRegisterDelta.serializeBinaryToWriter
    );
  }
  f = message.getFlag();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cloudstate.crdt.FlagDelta.serializeBinaryToWriter
    );
  }
  f = message.getOrmap();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cloudstate.crdt.ORMapDelta.serializeBinaryToWriter
    );
  }
  f = message.getVote();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.cloudstate.crdt.VoteDelta.serializeBinaryToWriter
    );
  }
};


/**
 * optional GCounterDelta gcounter = 1;
 * @return {?proto.cloudstate.crdt.GCounterDelta}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getGcounter = function() {
  return /** @type{?proto.cloudstate.crdt.GCounterDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.GCounterDelta, 1));
};


/**
 * @param {?proto.cloudstate.crdt.GCounterDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
*/
proto.cloudstate.crdt.CrdtDelta.prototype.setGcounter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
 */
proto.cloudstate.crdt.CrdtDelta.prototype.clearGcounter = function() {
  return this.setGcounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.hasGcounter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PNCounterDelta pncounter = 2;
 * @return {?proto.cloudstate.crdt.PNCounterDelta}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getPncounter = function() {
  return /** @type{?proto.cloudstate.crdt.PNCounterDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.PNCounterDelta, 2));
};


/**
 * @param {?proto.cloudstate.crdt.PNCounterDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
*/
proto.cloudstate.crdt.CrdtDelta.prototype.setPncounter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
 */
proto.cloudstate.crdt.CrdtDelta.prototype.clearPncounter = function() {
  return this.setPncounter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.hasPncounter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional GSetDelta gset = 3;
 * @return {?proto.cloudstate.crdt.GSetDelta}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getGset = function() {
  return /** @type{?proto.cloudstate.crdt.GSetDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.GSetDelta, 3));
};


/**
 * @param {?proto.cloudstate.crdt.GSetDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
*/
proto.cloudstate.crdt.CrdtDelta.prototype.setGset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
 */
proto.cloudstate.crdt.CrdtDelta.prototype.clearGset = function() {
  return this.setGset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.hasGset = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ORSetDelta orset = 4;
 * @return {?proto.cloudstate.crdt.ORSetDelta}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getOrset = function() {
  return /** @type{?proto.cloudstate.crdt.ORSetDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.ORSetDelta, 4));
};


/**
 * @param {?proto.cloudstate.crdt.ORSetDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
*/
proto.cloudstate.crdt.CrdtDelta.prototype.setOrset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
 */
proto.cloudstate.crdt.CrdtDelta.prototype.clearOrset = function() {
  return this.setOrset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.hasOrset = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional LWWRegisterDelta lwwregister = 5;
 * @return {?proto.cloudstate.crdt.LWWRegisterDelta}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getLwwregister = function() {
  return /** @type{?proto.cloudstate.crdt.LWWRegisterDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.LWWRegisterDelta, 5));
};


/**
 * @param {?proto.cloudstate.crdt.LWWRegisterDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
*/
proto.cloudstate.crdt.CrdtDelta.prototype.setLwwregister = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
 */
proto.cloudstate.crdt.CrdtDelta.prototype.clearLwwregister = function() {
  return this.setLwwregister(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.hasLwwregister = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional FlagDelta flag = 6;
 * @return {?proto.cloudstate.crdt.FlagDelta}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getFlag = function() {
  return /** @type{?proto.cloudstate.crdt.FlagDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.FlagDelta, 6));
};


/**
 * @param {?proto.cloudstate.crdt.FlagDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
*/
proto.cloudstate.crdt.CrdtDelta.prototype.setFlag = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
 */
proto.cloudstate.crdt.CrdtDelta.prototype.clearFlag = function() {
  return this.setFlag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.hasFlag = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ORMapDelta ormap = 7;
 * @return {?proto.cloudstate.crdt.ORMapDelta}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getOrmap = function() {
  return /** @type{?proto.cloudstate.crdt.ORMapDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.ORMapDelta, 7));
};


/**
 * @param {?proto.cloudstate.crdt.ORMapDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
*/
proto.cloudstate.crdt.CrdtDelta.prototype.setOrmap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
 */
proto.cloudstate.crdt.CrdtDelta.prototype.clearOrmap = function() {
  return this.setOrmap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.hasOrmap = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional VoteDelta vote = 8;
 * @return {?proto.cloudstate.crdt.VoteDelta}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.getVote = function() {
  return /** @type{?proto.cloudstate.crdt.VoteDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.VoteDelta, 8));
};


/**
 * @param {?proto.cloudstate.crdt.VoteDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
*/
proto.cloudstate.crdt.CrdtDelta.prototype.setVote = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.cloudstate.crdt.CrdtDelta.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtDelta} returns this
 */
proto.cloudstate.crdt.CrdtDelta.prototype.clearVote = function() {
  return this.setVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtDelta.prototype.hasVote = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.GCounterDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.GCounterDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.GCounterDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.GCounterDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    increment: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.GCounterDelta}
 */
proto.cloudstate.crdt.GCounterDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.GCounterDelta;
  return proto.cloudstate.crdt.GCounterDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.GCounterDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.GCounterDelta}
 */
proto.cloudstate.crdt.GCounterDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setIncrement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.GCounterDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.GCounterDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.GCounterDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.GCounterDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIncrement();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 increment = 1;
 * @return {number}
 */
proto.cloudstate.crdt.GCounterDelta.prototype.getIncrement = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.GCounterDelta} returns this
 */
proto.cloudstate.crdt.GCounterDelta.prototype.setIncrement = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.PNCounterDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.PNCounterDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.PNCounterDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.PNCounterDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    change: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.PNCounterDelta}
 */
proto.cloudstate.crdt.PNCounterDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.PNCounterDelta;
  return proto.cloudstate.crdt.PNCounterDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.PNCounterDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.PNCounterDelta}
 */
proto.cloudstate.crdt.PNCounterDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setChange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.PNCounterDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.PNCounterDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.PNCounterDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.PNCounterDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChange();
  if (f !== 0) {
    writer.writeSint64(
      1,
      f
    );
  }
};


/**
 * optional sint64 change = 1;
 * @return {number}
 */
proto.cloudstate.crdt.PNCounterDelta.prototype.getChange = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.PNCounterDelta} returns this
 */
proto.cloudstate.crdt.PNCounterDelta.prototype.setChange = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.GSetDelta.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.GSetDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.GSetDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.GSetDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.GSetDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    addedList: jspb.Message.toObjectList(msg.getAddedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.GSetDelta}
 */
proto.cloudstate.crdt.GSetDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.GSetDelta;
  return proto.cloudstate.crdt.GSetDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.GSetDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.GSetDelta}
 */
proto.cloudstate.crdt.GSetDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addAdded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.GSetDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.GSetDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.GSetDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.GSetDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * repeated google.protobuf.Any added = 1;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.cloudstate.crdt.GSetDelta.prototype.getAddedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.cloudstate.crdt.GSetDelta} returns this
*/
proto.cloudstate.crdt.GSetDelta.prototype.setAddedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.GSetDelta.prototype.addAdded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.GSetDelta} returns this
 */
proto.cloudstate.crdt.GSetDelta.prototype.clearAddedList = function() {
  return this.setAddedList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.ORSetDelta.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.ORSetDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.ORSetDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.ORSetDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORSetDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleared: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    removedList: jspb.Message.toObjectList(msg.getRemovedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    addedList: jspb.Message.toObjectList(msg.getAddedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.ORSetDelta}
 */
proto.cloudstate.crdt.ORSetDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.ORSetDelta;
  return proto.cloudstate.crdt.ORSetDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.ORSetDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.ORSetDelta}
 */
proto.cloudstate.crdt.ORSetDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleared(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addRemoved(value);
      break;
    case 3:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addAdded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.ORSetDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.ORSetDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.ORSetDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORSetDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleared();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRemovedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getAddedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool cleared = 1;
 * @return {boolean}
 */
proto.cloudstate.crdt.ORSetDelta.prototype.getCleared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cloudstate.crdt.ORSetDelta} returns this
 */
proto.cloudstate.crdt.ORSetDelta.prototype.setCleared = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated google.protobuf.Any removed = 2;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.cloudstate.crdt.ORSetDelta.prototype.getRemovedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.cloudstate.crdt.ORSetDelta} returns this
*/
proto.cloudstate.crdt.ORSetDelta.prototype.setRemovedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.ORSetDelta.prototype.addRemoved = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.ORSetDelta} returns this
 */
proto.cloudstate.crdt.ORSetDelta.prototype.clearRemovedList = function() {
  return this.setRemovedList([]);
};


/**
 * repeated google.protobuf.Any added = 3;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.cloudstate.crdt.ORSetDelta.prototype.getAddedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 3));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.cloudstate.crdt.ORSetDelta} returns this
*/
proto.cloudstate.crdt.ORSetDelta.prototype.setAddedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.ORSetDelta.prototype.addAdded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.ORSetDelta} returns this
 */
proto.cloudstate.crdt.ORSetDelta.prototype.clearAddedList = function() {
  return this.setAddedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.LWWRegisterDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.LWWRegisterDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.LWWRegisterDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    clock: jspb.Message.getFieldWithDefault(msg, 2, 0),
    customClockValue: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.LWWRegisterDelta}
 */
proto.cloudstate.crdt.LWWRegisterDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.LWWRegisterDelta;
  return proto.cloudstate.crdt.LWWRegisterDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.LWWRegisterDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.LWWRegisterDelta}
 */
proto.cloudstate.crdt.LWWRegisterDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {!proto.cloudstate.crdt.CrdtClock} */ (reader.readEnum());
      msg.setClock(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCustomClockValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.LWWRegisterDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.LWWRegisterDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.LWWRegisterDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getClock();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCustomClockValue();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.Any value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cloudstate.crdt.LWWRegisterDelta} returns this
*/
proto.cloudstate.crdt.LWWRegisterDelta.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.LWWRegisterDelta} returns this
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CrdtClock clock = 2;
 * @return {!proto.cloudstate.crdt.CrdtClock}
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.getClock = function() {
  return /** @type {!proto.cloudstate.crdt.CrdtClock} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.cloudstate.crdt.CrdtClock} value
 * @return {!proto.cloudstate.crdt.LWWRegisterDelta} returns this
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.setClock = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 custom_clock_value = 3;
 * @return {number}
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.getCustomClockValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.LWWRegisterDelta} returns this
 */
proto.cloudstate.crdt.LWWRegisterDelta.prototype.setCustomClockValue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.FlagDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.FlagDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.FlagDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.FlagDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.FlagDelta}
 */
proto.cloudstate.crdt.FlagDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.FlagDelta;
  return proto.cloudstate.crdt.FlagDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.FlagDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.FlagDelta}
 */
proto.cloudstate.crdt.FlagDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.FlagDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.FlagDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.FlagDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.FlagDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool value = 1;
 * @return {boolean}
 */
proto.cloudstate.crdt.FlagDelta.prototype.getValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cloudstate.crdt.FlagDelta} returns this
 */
proto.cloudstate.crdt.FlagDelta.prototype.setValue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.ORMapDelta.repeatedFields_ = [2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.ORMapDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.ORMapDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORMapDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    cleared: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    removedList: jspb.Message.toObjectList(msg.getRemovedList(),
    google_protobuf_any_pb.Any.toObject, includeInstance),
    updatedList: jspb.Message.toObjectList(msg.getUpdatedList(),
    proto.cloudstate.crdt.ORMapEntryDelta.toObject, includeInstance),
    addedList: jspb.Message.toObjectList(msg.getAddedList(),
    proto.cloudstate.crdt.ORMapEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.ORMapDelta}
 */
proto.cloudstate.crdt.ORMapDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.ORMapDelta;
  return proto.cloudstate.crdt.ORMapDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.ORMapDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.ORMapDelta}
 */
proto.cloudstate.crdt.ORMapDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCleared(value);
      break;
    case 2:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addRemoved(value);
      break;
    case 3:
      var value = new proto.cloudstate.crdt.ORMapEntryDelta;
      reader.readMessage(value,proto.cloudstate.crdt.ORMapEntryDelta.deserializeBinaryFromReader);
      msg.addUpdated(value);
      break;
    case 4:
      var value = new proto.cloudstate.crdt.ORMapEntry;
      reader.readMessage(value,proto.cloudstate.crdt.ORMapEntry.deserializeBinaryFromReader);
      msg.addAdded(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.ORMapDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.ORMapDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORMapDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCleared();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRemovedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.cloudstate.crdt.ORMapEntryDelta.serializeBinaryToWriter
    );
  }
  f = message.getAddedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.cloudstate.crdt.ORMapEntry.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool cleared = 1;
 * @return {boolean}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.getCleared = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cloudstate.crdt.ORMapDelta} returns this
 */
proto.cloudstate.crdt.ORMapDelta.prototype.setCleared = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated google.protobuf.Any removed = 2;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.getRemovedList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.cloudstate.crdt.ORMapDelta} returns this
*/
proto.cloudstate.crdt.ORMapDelta.prototype.setRemovedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.addRemoved = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.ORMapDelta} returns this
 */
proto.cloudstate.crdt.ORMapDelta.prototype.clearRemovedList = function() {
  return this.setRemovedList([]);
};


/**
 * repeated ORMapEntryDelta updated = 3;
 * @return {!Array<!proto.cloudstate.crdt.ORMapEntryDelta>}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.getUpdatedList = function() {
  return /** @type{!Array<!proto.cloudstate.crdt.ORMapEntryDelta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cloudstate.crdt.ORMapEntryDelta, 3));
};


/**
 * @param {!Array<!proto.cloudstate.crdt.ORMapEntryDelta>} value
 * @return {!proto.cloudstate.crdt.ORMapDelta} returns this
*/
proto.cloudstate.crdt.ORMapDelta.prototype.setUpdatedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cloudstate.crdt.ORMapEntryDelta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cloudstate.crdt.ORMapEntryDelta}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.addUpdated = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cloudstate.crdt.ORMapEntryDelta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.ORMapDelta} returns this
 */
proto.cloudstate.crdt.ORMapDelta.prototype.clearUpdatedList = function() {
  return this.setUpdatedList([]);
};


/**
 * repeated ORMapEntry added = 4;
 * @return {!Array<!proto.cloudstate.crdt.ORMapEntry>}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.getAddedList = function() {
  return /** @type{!Array<!proto.cloudstate.crdt.ORMapEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.cloudstate.crdt.ORMapEntry, 4));
};


/**
 * @param {!Array<!proto.cloudstate.crdt.ORMapEntry>} value
 * @return {!proto.cloudstate.crdt.ORMapDelta} returns this
*/
proto.cloudstate.crdt.ORMapDelta.prototype.setAddedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cloudstate.crdt.ORMapEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cloudstate.crdt.ORMapEntry}
 */
proto.cloudstate.crdt.ORMapDelta.prototype.addAdded = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cloudstate.crdt.ORMapEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.ORMapDelta} returns this
 */
proto.cloudstate.crdt.ORMapDelta.prototype.clearAddedList = function() {
  return this.setAddedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.ORMapEntryDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.ORMapEntryDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.ORMapEntryDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORMapEntryDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    delta: (f = msg.getDelta()) && proto.cloudstate.crdt.CrdtDelta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.ORMapEntryDelta}
 */
proto.cloudstate.crdt.ORMapEntryDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.ORMapEntryDelta;
  return proto.cloudstate.crdt.ORMapEntryDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.ORMapEntryDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.ORMapEntryDelta}
 */
proto.cloudstate.crdt.ORMapEntryDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.cloudstate.crdt.CrdtDelta;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtDelta.deserializeBinaryFromReader);
      msg.setDelta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.ORMapEntryDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.ORMapEntryDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.ORMapEntryDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.ORMapEntryDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getDelta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.cloudstate.crdt.CrdtDelta.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any key = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.cloudstate.crdt.ORMapEntryDelta.prototype.getKey = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.cloudstate.crdt.ORMapEntryDelta} returns this
*/
proto.cloudstate.crdt.ORMapEntryDelta.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.ORMapEntryDelta} returns this
 */
proto.cloudstate.crdt.ORMapEntryDelta.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.ORMapEntryDelta.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CrdtDelta delta = 2;
 * @return {?proto.cloudstate.crdt.CrdtDelta}
 */
proto.cloudstate.crdt.ORMapEntryDelta.prototype.getDelta = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtDelta, 2));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtDelta|undefined} value
 * @return {!proto.cloudstate.crdt.ORMapEntryDelta} returns this
*/
proto.cloudstate.crdt.ORMapEntryDelta.prototype.setDelta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.ORMapEntryDelta} returns this
 */
proto.cloudstate.crdt.ORMapEntryDelta.prototype.clearDelta = function() {
  return this.setDelta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.ORMapEntryDelta.prototype.hasDelta = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.VoteDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.VoteDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.VoteDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.VoteDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    selfVote: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    votesFor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalVoters: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.VoteDelta}
 */
proto.cloudstate.crdt.VoteDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.VoteDelta;
  return proto.cloudstate.crdt.VoteDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.VoteDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.VoteDelta}
 */
proto.cloudstate.crdt.VoteDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSelfVote(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVotesFor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalVoters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.VoteDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.VoteDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.VoteDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.VoteDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelfVote();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getVotesFor();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalVoters();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional bool self_vote = 1;
 * @return {boolean}
 */
proto.cloudstate.crdt.VoteDelta.prototype.getSelfVote = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cloudstate.crdt.VoteDelta} returns this
 */
proto.cloudstate.crdt.VoteDelta.prototype.setSelfVote = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 votes_for = 2;
 * @return {number}
 */
proto.cloudstate.crdt.VoteDelta.prototype.getVotesFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.VoteDelta} returns this
 */
proto.cloudstate.crdt.VoteDelta.prototype.setVotesFor = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 total_voters = 3;
 * @return {number}
 */
proto.cloudstate.crdt.VoteDelta.prototype.getTotalVoters = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.VoteDelta} returns this
 */
proto.cloudstate.crdt.VoteDelta.prototype.setTotalVoters = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtInit.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtInit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtInit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtInit.toObject = function(includeInstance, msg) {
  var f, obj = {
    serviceName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    entityId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    state: (f = msg.getState()) && proto.cloudstate.crdt.CrdtState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtInit}
 */
proto.cloudstate.crdt.CrdtInit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtInit;
  return proto.cloudstate.crdt.CrdtInit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtInit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtInit}
 */
proto.cloudstate.crdt.CrdtInit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityId(value);
      break;
    case 3:
      var value = new proto.cloudstate.crdt.CrdtState;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtInit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtInit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtInit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtInit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServiceName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEntityId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cloudstate.crdt.CrdtState.serializeBinaryToWriter
    );
  }
};


/**
 * optional string service_name = 1;
 * @return {string}
 */
proto.cloudstate.crdt.CrdtInit.prototype.getServiceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cloudstate.crdt.CrdtInit} returns this
 */
proto.cloudstate.crdt.CrdtInit.prototype.setServiceName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string entity_id = 2;
 * @return {string}
 */
proto.cloudstate.crdt.CrdtInit.prototype.getEntityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cloudstate.crdt.CrdtInit} returns this
 */
proto.cloudstate.crdt.CrdtInit.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CrdtState state = 3;
 * @return {?proto.cloudstate.crdt.CrdtState}
 */
proto.cloudstate.crdt.CrdtInit.prototype.getState = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtState, 3));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtInit} returns this
*/
proto.cloudstate.crdt.CrdtInit.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtInit} returns this
 */
proto.cloudstate.crdt.CrdtInit.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtInit.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtDelete.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtDelete.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtDelete} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtDelete.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtDelete}
 */
proto.cloudstate.crdt.CrdtDelete.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtDelete;
  return proto.cloudstate.crdt.CrdtDelete.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtDelete} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtDelete}
 */
proto.cloudstate.crdt.CrdtDelete.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtDelete.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtDelete.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtDelete} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtDelete.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.CrdtReply.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtReply.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clientAction: (f = msg.getClientAction()) && cloudstate_entity_pb.ClientAction.toObject(includeInstance, f),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    cloudstate_entity_pb.SideEffect.toObject, includeInstance),
    stateAction: (f = msg.getStateAction()) && proto.cloudstate.crdt.CrdtStateAction.toObject(includeInstance, f),
    streamed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtReply}
 */
proto.cloudstate.crdt.CrdtReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtReply;
  return proto.cloudstate.crdt.CrdtReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtReply}
 */
proto.cloudstate.crdt.CrdtReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new cloudstate_entity_pb.ClientAction;
      reader.readMessage(value,cloudstate_entity_pb.ClientAction.deserializeBinaryFromReader);
      msg.setClientAction(value);
      break;
    case 4:
      var value = new cloudstate_entity_pb.SideEffect;
      reader.readMessage(value,cloudstate_entity_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    case 5:
      var value = new proto.cloudstate.crdt.CrdtStateAction;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtStateAction.deserializeBinaryFromReader);
      msg.setStateAction(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStreamed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClientAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cloudstate_entity_pb.ClientAction.serializeBinaryToWriter
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      cloudstate_entity_pb.SideEffect.serializeBinaryToWriter
    );
  }
  f = message.getStateAction();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cloudstate.crdt.CrdtStateAction.serializeBinaryToWriter
    );
  }
  f = message.getStreamed();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional int64 command_id = 1;
 * @return {number}
 */
proto.cloudstate.crdt.CrdtReply.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.CrdtReply} returns this
 */
proto.cloudstate.crdt.CrdtReply.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional cloudstate.ClientAction client_action = 2;
 * @return {?proto.cloudstate.ClientAction}
 */
proto.cloudstate.crdt.CrdtReply.prototype.getClientAction = function() {
  return /** @type{?proto.cloudstate.ClientAction} */ (
    jspb.Message.getWrapperField(this, cloudstate_entity_pb.ClientAction, 2));
};


/**
 * @param {?proto.cloudstate.ClientAction|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtReply} returns this
*/
proto.cloudstate.crdt.CrdtReply.prototype.setClientAction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtReply} returns this
 */
proto.cloudstate.crdt.CrdtReply.prototype.clearClientAction = function() {
  return this.setClientAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtReply.prototype.hasClientAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated cloudstate.SideEffect side_effects = 4;
 * @return {!Array<!proto.cloudstate.SideEffect>}
 */
proto.cloudstate.crdt.CrdtReply.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.cloudstate.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, cloudstate_entity_pb.SideEffect, 4));
};


/**
 * @param {!Array<!proto.cloudstate.SideEffect>} value
 * @return {!proto.cloudstate.crdt.CrdtReply} returns this
*/
proto.cloudstate.crdt.CrdtReply.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cloudstate.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cloudstate.SideEffect}
 */
proto.cloudstate.crdt.CrdtReply.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cloudstate.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.CrdtReply} returns this
 */
proto.cloudstate.crdt.CrdtReply.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


/**
 * optional CrdtStateAction state_action = 5;
 * @return {?proto.cloudstate.crdt.CrdtStateAction}
 */
proto.cloudstate.crdt.CrdtReply.prototype.getStateAction = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtStateAction} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtStateAction, 5));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtStateAction|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtReply} returns this
*/
proto.cloudstate.crdt.CrdtReply.prototype.setStateAction = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtReply} returns this
 */
proto.cloudstate.crdt.CrdtReply.prototype.clearStateAction = function() {
  return this.setStateAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtReply.prototype.hasStateAction = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool streamed = 6;
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtReply.prototype.getStreamed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cloudstate.crdt.CrdtReply} returns this
 */
proto.cloudstate.crdt.CrdtReply.prototype.setStreamed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.cloudstate.crdt.CrdtStateAction.oneofGroups_ = [[5,6,7]];

/**
 * @enum {number}
 */
proto.cloudstate.crdt.CrdtStateAction.ActionCase = {
  ACTION_NOT_SET: 0,
  CREATE: 5,
  UPDATE: 6,
  DELETE: 7
};

/**
 * @return {proto.cloudstate.crdt.CrdtStateAction.ActionCase}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.getActionCase = function() {
  return /** @type {proto.cloudstate.crdt.CrdtStateAction.ActionCase} */(jspb.Message.computeOneofCase(this, proto.cloudstate.crdt.CrdtStateAction.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtStateAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtStateAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStateAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    create: (f = msg.getCreate()) && proto.cloudstate.crdt.CrdtState.toObject(includeInstance, f),
    update: (f = msg.getUpdate()) && proto.cloudstate.crdt.CrdtDelta.toObject(includeInstance, f),
    pb_delete: (f = msg.getDelete()) && proto.cloudstate.crdt.CrdtDelete.toObject(includeInstance, f),
    writeConsistency: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtStateAction}
 */
proto.cloudstate.crdt.CrdtStateAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtStateAction;
  return proto.cloudstate.crdt.CrdtStateAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtStateAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtStateAction}
 */
proto.cloudstate.crdt.CrdtStateAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = new proto.cloudstate.crdt.CrdtState;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtState.deserializeBinaryFromReader);
      msg.setCreate(value);
      break;
    case 6:
      var value = new proto.cloudstate.crdt.CrdtDelta;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtDelta.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 7:
      var value = new proto.cloudstate.crdt.CrdtDelete;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtDelete.deserializeBinaryFromReader);
      msg.setDelete(value);
      break;
    case 8:
      var value = /** @type {!proto.cloudstate.crdt.CrdtWriteConsistency} */ (reader.readEnum());
      msg.setWriteConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtStateAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtStateAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStateAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.cloudstate.crdt.CrdtState.serializeBinaryToWriter
    );
  }
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.cloudstate.crdt.CrdtDelta.serializeBinaryToWriter
    );
  }
  f = message.getDelete();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.cloudstate.crdt.CrdtDelete.serializeBinaryToWriter
    );
  }
  f = message.getWriteConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional CrdtState create = 5;
 * @return {?proto.cloudstate.crdt.CrdtState}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.getCreate = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtState} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtState, 5));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtState|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStateAction} returns this
*/
proto.cloudstate.crdt.CrdtStateAction.prototype.setCreate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.cloudstate.crdt.CrdtStateAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStateAction} returns this
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.clearCreate = function() {
  return this.setCreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.hasCreate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CrdtDelta update = 6;
 * @return {?proto.cloudstate.crdt.CrdtDelta}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.getUpdate = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtDelta} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtDelta, 6));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtDelta|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStateAction} returns this
*/
proto.cloudstate.crdt.CrdtStateAction.prototype.setUpdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.cloudstate.crdt.CrdtStateAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStateAction} returns this
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional CrdtDelete delete = 7;
 * @return {?proto.cloudstate.crdt.CrdtDelete}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.getDelete = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtDelete} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtDelete, 7));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtDelete|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStateAction} returns this
*/
proto.cloudstate.crdt.CrdtStateAction.prototype.setDelete = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.cloudstate.crdt.CrdtStateAction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStateAction} returns this
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.clearDelete = function() {
  return this.setDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.hasDelete = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional CrdtWriteConsistency write_consistency = 8;
 * @return {!proto.cloudstate.crdt.CrdtWriteConsistency}
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.getWriteConsistency = function() {
  return /** @type {!proto.cloudstate.crdt.CrdtWriteConsistency} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.cloudstate.crdt.CrdtWriteConsistency} value
 * @return {!proto.cloudstate.crdt.CrdtStateAction} returns this
 */
proto.cloudstate.crdt.CrdtStateAction.prototype.setWriteConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.CrdtStreamedMessage.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtStreamedMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtStreamedMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStreamedMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    clientAction: (f = msg.getClientAction()) && cloudstate_entity_pb.ClientAction.toObject(includeInstance, f),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    cloudstate_entity_pb.SideEffect.toObject, includeInstance),
    endStream: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtStreamedMessage}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtStreamedMessage;
  return proto.cloudstate.crdt.CrdtStreamedMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtStreamedMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtStreamedMessage}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new cloudstate_entity_pb.ClientAction;
      reader.readMessage(value,cloudstate_entity_pb.ClientAction.deserializeBinaryFromReader);
      msg.setClientAction(value);
      break;
    case 3:
      var value = new cloudstate_entity_pb.SideEffect;
      reader.readMessage(value,cloudstate_entity_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEndStream(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtStreamedMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtStreamedMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStreamedMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getClientAction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cloudstate_entity_pb.ClientAction.serializeBinaryToWriter
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      cloudstate_entity_pb.SideEffect.serializeBinaryToWriter
    );
  }
  f = message.getEndStream();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional int64 command_id = 1;
 * @return {number}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.CrdtStreamedMessage} returns this
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional cloudstate.ClientAction client_action = 2;
 * @return {?proto.cloudstate.ClientAction}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.getClientAction = function() {
  return /** @type{?proto.cloudstate.ClientAction} */ (
    jspb.Message.getWrapperField(this, cloudstate_entity_pb.ClientAction, 2));
};


/**
 * @param {?proto.cloudstate.ClientAction|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamedMessage} returns this
*/
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.setClientAction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamedMessage} returns this
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.clearClientAction = function() {
  return this.setClientAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.hasClientAction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated cloudstate.SideEffect side_effects = 3;
 * @return {!Array<!proto.cloudstate.SideEffect>}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.cloudstate.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, cloudstate_entity_pb.SideEffect, 3));
};


/**
 * @param {!Array<!proto.cloudstate.SideEffect>} value
 * @return {!proto.cloudstate.crdt.CrdtStreamedMessage} returns this
*/
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cloudstate.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cloudstate.SideEffect}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cloudstate.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.CrdtStreamedMessage} returns this
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


/**
 * optional bool end_stream = 4;
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.getEndStream = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.cloudstate.crdt.CrdtStreamedMessage} returns this
 */
proto.cloudstate.crdt.CrdtStreamedMessage.prototype.setEndStream = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.cloudstate.crdt.CrdtStreamCancelledResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cloudstate.crdt.CrdtStreamCancelledResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sideEffectsList: jspb.Message.toObjectList(msg.getSideEffectsList(),
    cloudstate_entity_pb.SideEffect.toObject, includeInstance),
    stateAction: (f = msg.getStateAction()) && proto.cloudstate.crdt.CrdtStateAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cloudstate.crdt.CrdtStreamCancelledResponse}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.cloudstate.crdt.CrdtStreamCancelledResponse;
  return proto.cloudstate.crdt.CrdtStreamCancelledResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cloudstate.crdt.CrdtStreamCancelledResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cloudstate.crdt.CrdtStreamCancelledResponse}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommandId(value);
      break;
    case 2:
      var value = new cloudstate_entity_pb.SideEffect;
      reader.readMessage(value,cloudstate_entity_pb.SideEffect.deserializeBinaryFromReader);
      msg.addSideEffects(value);
      break;
    case 3:
      var value = new proto.cloudstate.crdt.CrdtStateAction;
      reader.readMessage(value,proto.cloudstate.crdt.CrdtStateAction.deserializeBinaryFromReader);
      msg.setStateAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.cloudstate.crdt.CrdtStreamCancelledResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cloudstate.crdt.CrdtStreamCancelledResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getSideEffectsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      cloudstate_entity_pb.SideEffect.serializeBinaryToWriter
    );
  }
  f = message.getStateAction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.cloudstate.crdt.CrdtStateAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 command_id = 1;
 * @return {number}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.getCommandId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.cloudstate.crdt.CrdtStreamCancelledResponse} returns this
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.setCommandId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated cloudstate.SideEffect side_effects = 2;
 * @return {!Array<!proto.cloudstate.SideEffect>}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.getSideEffectsList = function() {
  return /** @type{!Array<!proto.cloudstate.SideEffect>} */ (
    jspb.Message.getRepeatedWrapperField(this, cloudstate_entity_pb.SideEffect, 2));
};


/**
 * @param {!Array<!proto.cloudstate.SideEffect>} value
 * @return {!proto.cloudstate.crdt.CrdtStreamCancelledResponse} returns this
*/
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.setSideEffectsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cloudstate.SideEffect=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cloudstate.SideEffect}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.addSideEffects = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cloudstate.SideEffect, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.cloudstate.crdt.CrdtStreamCancelledResponse} returns this
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.clearSideEffectsList = function() {
  return this.setSideEffectsList([]);
};


/**
 * optional CrdtStateAction state_action = 3;
 * @return {?proto.cloudstate.crdt.CrdtStateAction}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.getStateAction = function() {
  return /** @type{?proto.cloudstate.crdt.CrdtStateAction} */ (
    jspb.Message.getWrapperField(this, proto.cloudstate.crdt.CrdtStateAction, 3));
};


/**
 * @param {?proto.cloudstate.crdt.CrdtStateAction|undefined} value
 * @return {!proto.cloudstate.crdt.CrdtStreamCancelledResponse} returns this
*/
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.setStateAction = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.cloudstate.crdt.CrdtStreamCancelledResponse} returns this
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.clearStateAction = function() {
  return this.setStateAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.cloudstate.crdt.CrdtStreamCancelledResponse.prototype.hasStateAction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.cloudstate.crdt.CrdtWriteConsistency = {
  LOCAL: 0,
  MAJORITY: 1,
  ALL: 2
};

/**
 * @enum {number}
 */
proto.cloudstate.crdt.CrdtClock = {
  DEFAULT: 0,
  REVERSE: 1,
  CUSTOM: 2,
  CUSTOM_AUTO_INCREMENT: 3
};

goog.object.extend(exports, proto.cloudstate.crdt);
